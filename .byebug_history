continue
conf.duplicate
conf.prepare do include PrepareMailer end
next
net
step
::PrepareMailer
PrepareMailer
continue
module PrepareMailer def user_name; "hola"; end; end
module PrepareMailer def user_name "hola"; end; end
module PrepareMailer def user_name "hola"; end end
module; PrepareMailer; def; user_name; "hola"; end; end;
module; PrepareMailer; def; user_name; "hola"; end; end
module PrepareMailer def user_name; "hola"; end; end
module PrepareMailer; def user_name; "hola"; end; end
module PrepareMailer; def user_name; user.name; end; end
module PrepareMailer def user_name; user.name; end end
module PrepareMailer; def user_name; user.name; end end
module PrepareMailer def user_name user.name; end end
        end
          user.name
        def user_name
module PrepareMailer
PrepareMailer
next
step
continue
conf.duplicate
conf.modules
conf
self.configuration
next
step
base.configuration
base
exit
InvoiceMailer.configuration.modules
InvoiceMailer.new(user: User.new('Luca')).render(:html).must_include 'Luca'
InvoiceMailer.configuration
@configuration.modules.each do |mod| InvoiceMailer.class_eval(&mod) end
        InvoiceMailer.class_eval(&mod)
@configuration.modules.each do |mod|
InvoiceMailer.configuration
InvoiceMailer
InvoceMailer
InvoceMailer.configuration
Hanami::Mailer.configuration
Hanami::Mailer
